name: Release

on:
  workflow_dispatch:
    inputs:
      package:
        description: 'Package'
        required: true
        default: 'fe'
        type: choice
        options:
          - all
          - fe
          - be
      build_mode:
        description: 'Build Mode (patch | minor | major)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.16.0'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup Git
        run: |
          git config user.name "ci gh-action"
          git config user.email "ci@gh-action.none"
          git config advice.addIgnoredFile false
          git config advice.detachedHead false

      - name: Verify package
        run: |
          echo "package: ${{ github.event.inputs.package }}"

      - name: Verify build_mode
        run: |
          echo "build_mode: ${{ github.event.inputs.build_mode }}"

      - name: Install dependencies and build ðŸ”§
        run: |
          npm install -g pnpm
          pnpm install

      - name: Versioning application artifact
        run: |
          PACKAGE=${{ github.event.inputs.package }}

          if [ $PACKAGE = "all" ]; then
            pnpm all
          else
            RELEASE_MODE=${{ github.event.inputs.build_mode }}
            pnpm --filter ./packages/$PACKAGE version $RELEASE_MODE
          fi

      - name: Publish package on NPM ðŸ“¦
        run: |
          PACKAGE=${{ github.event.inputs.package }}
          pnpm release:$PACKAGE
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPMJS_ACCESS_TOKEN }}

      - name: Patch latest version to Git
        run: |
          PACKAGE=${{ github.event.inputs.package }}
          VERSION=$(jq -r .version ./packages/$PACKAGE/package.json)
          COMMIT_MESSAGE="[build]: upgrade $PACKAGE@$VERSION"
          git fetch
          git checkout main
          git add .
          git commit -m "$COMMIT_MESSAGE"
          git push origin main
